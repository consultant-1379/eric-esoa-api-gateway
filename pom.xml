<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Ericsson 2023
    The copyright to the computer program(s) herein is the property of
    Ericsson Inc. The programs may be used and/or copied only with written
    permission from Ericsson Inc. or in accordance with the terms and
    conditions stipulated in the agreement/contract under which the
    program(s) have been supplied.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.1</version>
    <relativePath/>
  </parent>
  <groupId>com.ericsson.bos.so</groupId>
  <artifactId>eric-esoa-api-gateway</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>eric-esoa-api-gateway</name>
  <description>ESO Access Gateway</description>

  <repositories>
    <repository>
      <id>spring-snapshots</id>
      <name>Spring Snapshots</name>
      <url>https://repo.spring.io/snapshot</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <project.rootdir>${project.basedir}</project.rootdir>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>17</java.version>
    <commons-io.version>2.11.0</commons-io.version>
    <eric-common-logging.version>1.0.21</eric-common-logging.version>
	<!--updating flyway version from 7.14.0 to 8.5.13 -->
    <flyway.version>8.5.13</flyway.version>
    <hazelcast.version>3.12.13</hazelcast.version>
    <lombok.version>1.18.24</lombok.version>
    <maven.sonar-plugin.version>3.8.0.2131</maven.sonar-plugin.version>
    <maven.spotless.version>1.16.0</maven.spotless.version>
    <maven.jcoco-plugin.version>0.8.8</maven.jcoco-plugin.version>
    <postgresql.version>42.4.1</postgresql.version>
    <spring-cloud.version>2021.0.3</spring-cloud.version>
    <io.projectreactor.netty.version>1.0.14</io.projectreactor.netty.version>
    <io.netty.codec.version>4.1.68.Final</io.netty.codec.version>
    <spring-security-core.version>5.5.7</spring-security-core.version>
    <spring-security-oauth2-client.version>5.5.7</spring-security-oauth2-client.version>
    <tomcat-embed.version>9.0.54</tomcat-embed.version>
    <spring-core.version>5.3.20</spring-core.version>
    <spring-cloud-gateway-server.version>3.1.4</spring-cloud-gateway-server.version>

    <!-- Test and Verification Dependencies -->
    <spring-cloud-contract.version>3.0.3</spring-cloud-contract.version>
    <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
    <mockito-junit-jupiter.version>4.6.1</mockito-junit-jupiter.version>
    <junit-jupiter-params.version>5.3.2</junit-jupiter-params.version>
    <wiremock.version>1.58</wiremock.version>
    <awaitility.version>3.1.2</awaitility.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>
    <junit-jupiter-engine.version>5.1.0</junit-jupiter-engine.version>
	<!-- google java format version changed-->
    <googleJavaFormat.version>1.7</googleJavaFormat.version>
    <!-- Sonar configuration-->
    <sonar.host.url>https://codeanalyzer2.internal.ericsson.com/</sonar.host.url>
    <!-- Open API configuration -->
    <jackson-databind-nullable.version>0.2.4</jackson-databind-nullable.version>
    <openapi-generator-maven-plugin.version>5.0.0</openapi-generator-maven-plugin.version>
    <swagger-annotations.version>1.6.2</swagger-annotations.version>
    <springfox.version>3.0.0</springfox.version>
    <servlet-api.version>3.0.1</servlet-api.version>
    <error-message-factory.version>2.0.2</error-message-factory.version>
    <snakeyaml.version>1.31</snakeyaml.version>
    <jackson-databind.version>2.12.7.1</jackson-databind.version>
    <javaassist.version>3.29.0-GA</javaassist.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>${javaassist.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>io.projectreactor.netty</groupId>
      <artifactId>reactor-netty-http</artifactId>
      <version>${io.projectreactor.netty.version}</version>
    </dependency>
    <dependency>
      <groupId>io.projectreactor.netty</groupId>
      <artifactId>reactor-netty-core</artifactId>
      <version>${io.projectreactor.netty.version}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec</artifactId>
      <version>${io.netty.codec.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <version>${spring-security-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-gateway</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-gateway-server</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-gateway-server</artifactId>
      <version>${spring-cloud-gateway-server.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-el</artifactId>
      <version>${tomcat-embed.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.session</groupId>
      <artifactId>spring-session-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-client</artifactId>
      <version>${spring-security-oauth2-client.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
    </dependency>
    <dependency>
    <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-sleuth-zipkin</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring-core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.hazelcast</groupId>
      <artifactId>hazelcast</artifactId>
      <version>${hazelcast.version}</version>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
    </dependency>
    <!--    Library for eo-common logging. See more details at https://confluence-oss.seli.wh.rnd.internal.ericsson.com/display/ESO/EO+Common+Logging+Library -->
    <dependency>
      <groupId>com.ericsson.oss.orchestration.eo</groupId>
      <artifactId>eric-common-logging</artifactId>
      <version>${eric-common-logging.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-databind.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flyway.version}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>com.ericsson.oss.orchestration.so.common</groupId>
      <artifactId>error-message-factory</artifactId>
      <version>${error-message-factory.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-failsafe-plugin</artifactId>
      <version>${maven-failsafe-plugin.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito-junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit-jupiter-params.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${awaitility.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-contract-verifier</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Open API related Dependencies -->
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>${jackson-databind-nullable.version}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>${springfox.version}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>${springfox.version}</version>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>${swagger-annotations.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layout>ZIP</layout>
          <executable>true</executable>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>${junit-platform-surefire-provider.version}</version>
          </dependency>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter-engine.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${maven.sonar-plugin.version}</version>
        <executions>
          <execution>
            <id>validate-sonar</id>
            <phase>install</phase>
            <goals>
              <goal>sonar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${maven.spotless.version}</version>
       <executions>
        <execution>
            <id>validate-spotless</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions> 
        <configuration>
          <java>
            <licenseHeader>
              <file>${basedir}/code/header.txt</file>
            </licenseHeader>
            <googleJavaFormat>
              <version>${googleJavaFormat.version}</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
            <removeUnusedImports/>
            <trimTrailingWhitespace/>
            <endWithNewline/>
          </java>
        </configuration>
      </plugin>  
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi-generator-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>1</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/v1/eric-oss-api-gateway-route-auth-openapi.yaml</inputSpec>
              <generatorName>html</generatorName>
              <output>src/main/resources/v1</output>
            </configuration>
          </execution>
          <execution>
            <id>2</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/v1/eric-oss-api-gateway-route-auth-openapi.yaml</inputSpec>
              <generatorName>spring</generatorName>
              <modelNamePrefix>eric-esoa-api-gateway-route-api</modelNamePrefix>
              <configOptions>
                <generateSupportingFiles>true</generateSupportingFiles>
                <sourceFolder>src/java/main</sourceFolder>
                <dateLibrary>java8</dateLibrary>
                <library>spring-mvc</library>
                <java17>true</java17>
                <interfaceOnly>true</interfaceOnly>
                <skipOverwrite>false</skipOverwrite>
                <useTags>true</useTags>
                <useBeanValidation>true</useBeanValidation>
              </configOptions>
              <apiPackage>com.ericsson.gateway.api</apiPackage>
              <modelPackage>com.ericsson.gateway.api.model</modelPackage>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <artifactVersion>${project.version}</artifactVersion>
              <environmentVariables>
                <enablePostProcessFile>true</enablePostProcessFile>
              </environmentVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-contract-maven-plugin</artifactId>
        <version>${spring-cloud-contract.version}</version>
        <extensions>true</extensions>
        <configuration>
          <testFramework>JUNIT5</testFramework>
          <baseClassForTests>com.ericsson.gateway.api.contract.ContractVerifierBase</baseClassForTests>
          <testMode>EXPLICIT</testMode>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/eric-oss-api-gateway-route-openapi.zip</exclude>
        </excludes>
      </resource>
    </resources>
  </build>

  <profiles>
    <profile>
      <id>ci</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${maven.jcoco-plugin.version}</version>
            <configuration>
              <append>true</append>
              <excludes>
                <exclude>**/dao/*</exclude>
                <exclude>**/model/*</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>agent-for-ut</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>agent-for-it</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>jacoco-site</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>default-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <!--  implementation is needed only for Maven 2  -->
                    <rule implementation="org.jacoco.maven.RuleConfiguration">
                      <element>BUNDLE</element>
                      <limits>
                        <!--  implementation is needed only for Maven 2  -->
                        <limit implementation="org.jacoco.report.check.Limit">
                          <counter>COMPLEXITY</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.01</minimum>
                        </limit>
                        <limit>
                          <counter>LINE</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.01</minimum>
                        </limit>
                        <limit>
                          <counter>BRANCH</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.00</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>${maven.sonar-plugin.version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
